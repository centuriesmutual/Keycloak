{
  "id": "CenturiesMutual-Staff",
  "realm": "CenturiesMutual-Staff",
  "displayName": "Centuries Mutual Staff Portal",
  "enabled": true,
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": true,
  "verifyEmail": true,
  "resetPasswordAllowed": true,
  "editUsernameAllowed": false,
  "bruteForceProtected": true,
  "permanentLockout": false,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "sslRequired": "external",
  "loginTheme": "keycloak",
  "accountTheme": "keycloak",
  "adminTheme": "keycloak",
  "emailTheme": "keycloak",
  "internationalizationEnabled": true,
  "supportedLocales": ["en"],
  "defaultLocale": "en",
  
  "passwordPolicy": "length(12) and upperCase(1) and lowerCase(1) and digits(1) and specialChars(1) and notUsername() and passwordHistory(3)",
  
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA256",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": true,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": true,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    }
  ],
  
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  
  "attributes": {
    "frontendUrl": "${keycloak.frontendUrl}",
    "_browser_header.xContentTypeOptions": "nosniff",
    "_browser_header.xRobotsTag": "none",
    "_browser_header.xFrameOptions": "SAMEORIGIN",
    "_browser_header.contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "_browser_header.xXSSProtection": "1; mode=block",
    "_browser_header.strictTransportSecurity": "max-age=31536000; includeSubDomains",
    "permanentLockout": "false",
    "quickLoginCheckMilliSeconds": "1000",
    "maxDeltaTimeSeconds": "43200",
    "failureFactor": "5",
    "actionTokenGeneratedByUserLifespan": "300",
    "actionTokenGeneratedByAdminLifespan": "43200"
  },
  
  "roles": {
    "realm": [
      {
        "name": "support_agent",
        "description": "Support team member with customer service access",
        "composite": false,
        "clientRole": false
      },
      {
        "name": "marketing_broker",
        "description": "Marketing team member with campaign access",
        "composite": false,
        "clientRole": false
      },
      {
        "name": "admin",
        "description": "Administrator with full system access",
        "composite": true,
        "composites": {
          "realm": ["support_agent", "marketing_broker"]
        },
        "clientRole": false
      }
    ]
  },
  
  "groups": [
    {
      "name": "Support Team",
      "path": "/Support Team",
      "attributes": {
        "department": ["support"],
        "access_level": ["standard"]
      },
      "realmRoles": ["support_agent"],
      "clientRoles": {}
    },
    {
      "name": "Marketing Team",
      "path": "/Marketing Team",
      "attributes": {
        "department": ["marketing"],
        "access_level": ["standard"]
      },
      "realmRoles": ["marketing_broker"],
      "clientRoles": {}
    },
    {
      "name": "Administrators",
      "path": "/Administrators",
      "attributes": {
        "department": ["administration"],
        "access_level": ["full"]
      },
      "realmRoles": ["admin"],
      "clientRoles": {}
    }
  ],
  
  "clients": [
    {
      "clientId": "support-ios",
      "name": "Support iOS App",
      "description": "Centuries Mutual Support Staff Application",
      "rootUrl": "centuriesmutual://support",
      "adminUrl": "",
      "baseUrl": "centuriesmutual://support",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "e8f3b2d1-9a5c-4e7b-8c6d-1f2a3b4c5d6e",
      "redirectUris": [
        "centuriesmutual://support/callback",
        "centuriesmutual://support/redirect",
        "com.centuriesmutual.support://oauth/callback"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "post.logout.redirect.uris": "+",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "use.refresh.tokens": "true",
        "oidc.ciba.grant.enabled": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml.client.signature": "false",
        "require.pushed.authorization.requests": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false",
        "token.response.type.bearer.lower-case": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": ["web-origins", "profile", "roles", "email"],
      "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
    },
    {
      "clientId": "legend-ios",
      "name": "Legend iOS App",
      "description": "Centuries Mutual Legend Marketing Application",
      "rootUrl": "centuriesmutual://legend",
      "adminUrl": "",
      "baseUrl": "centuriesmutual://legend",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "f9a4c3e2-8b6d-5f7a-9d8e-2c5b6a7f3e1d",
      "redirectUris": [
        "centuriesmutual://legend/callback",
        "centuriesmutual://legend/redirect",
        "com.centuriesmutual.legend://oauth/callback"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "post.logout.redirect.uris": "+",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "use.refresh.tokens": "true",
        "oidc.ciba.grant.enabled": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml.client.signature": "false",
        "require.pushed.authorization.requests": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false",
        "token.response.type.bearer.lower-case": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": ["web-origins", "profile", "roles", "email"],
      "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
    },
    {
      "clientId": "admin-ios",
      "name": "Admin iOS App",
      "description": "Centuries Mutual Admin Application",
      "rootUrl": "centuriesmutual://admin",
      "adminUrl": "",
      "baseUrl": "centuriesmutual://admin",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "a7b8c9d0-e1f2-3a4b-5c6d-7e8f9a0b1c2d",
      "redirectUris": [
        "centuriesmutual://admin/callback",
        "centuriesmutual://admin/redirect",
        "com.centuriesmutual.admin://oauth/callback"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "post.logout.redirect.uris": "+",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "use.refresh.tokens": "true",
        "oidc.ciba.grant.enabled": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml.client.signature": "false",
        "require.pushed.authorization.requests": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false",
        "token.response.type.bearer.lower-case": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": ["web-origins", "profile", "roles", "email"],
      "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
    }
  ],
  
  "clientScopes": [
    {
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String"
          }
        },
        {
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String"
          }
        },
        {
          "name": "audience",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "admin-ios",
            "id.token.claim": "false",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "name": "email",
      "description": "OpenID Connect scope for add user email to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "name": "profile",
      "description": "OpenID Connect scope for add user profile to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "name": "department",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "department",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "department",
            "jsonType.label": "String"
          }
        },
        {
          "name": "employee_id",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "employee_id",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "employee_id",
            "jsonType.label": "String"
          }
        }
      ]
    }
  ],
  
  "users": [
    {
      "username": "support.alice",
      "enabled": true,
      "emailVerified": true,
      "firstName": "Alice",
      "lastName": "Support",
      "email": "alice.support@centuriesmutual.com",
      "attributes": {
        "department": ["support"],
        "employee_id": ["EMP-SUP-001"]
      },
      "credentials": [
        {
          "type": "password",
          "value": "Support@2024!",
          "temporary": false
        }
      ],
      "realmRoles": ["support_agent"],
      "groups": ["/Support Team"]
    },
    {
      "username": "marketing.bob",
      "enabled": true,
      "emailVerified": true,
      "firstName": "Bob",
      "lastName": "Marketing",
      "email": "bob.marketing@centuriesmutual.com",
      "attributes": {
        "department": ["marketing"],
        "employee_id": ["EMP-MKT-001"]
      },
      "credentials": [
        {
          "type": "password",
          "value": "Marketing@2024!",
          "temporary": false
        }
      ],
      "realmRoles": ["marketing_broker"],
      "groups": ["/Marketing Team"]
    },
    {
      "username": "admin.charlie",
      "enabled": true,
      "emailVerified": true,
      "firstName": "Charlie",
      "lastName": "Admin",
      "email": "charlie.admin@centuriesmutual.com",
      "attributes": {
        "department": ["administration"],
        "employee_id": ["EMP-ADM-001"]
      },
      "credentials": [
        {
          "type": "password",
          "value": "Admin@2024!",
          "temporary": false
        }
      ],
      "realmRoles": ["admin"],
      "groups": ["/Administrators"]
    },
    {
      "username": "admin.sarah",
      "enabled": true,
      "emailVerified": true,
      "firstName": "Sarah",
      "lastName": "SuperAdmin",
      "email": "sarah.admin@centuriesmutual.com",
      "attributes": {
        "department": ["administration"],
        "employee_id": ["EMP-ADM-002"]
      },
      "credentials": [
        {
          "type": "password",
          "value": "SuperAdmin@2024!",
          "temporary": false
        }
      ],
      "realmRoles": ["admin", "support_agent", "marketing_broker"],
      "groups": ["/Administrators"]
    }
  ],
  
  "browserSecurityHeaders": {
    "xContentTypeOptions": "nosniff",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  
  "smtpServer": {
    "host": "${SMTP_HOST}",
    "port": "${SMTP_PORT}",
    "from": "noreply-staff@centuriesmutual.com",
    "fromDisplayName": "Centuries Mutual Staff Portal",
    "ssl": "true",
    "starttls": "true",
    "auth": "true",
    "user": "${SMTP_USER}",
    "password": "${SMTP_PASSWORD}"
  }
}